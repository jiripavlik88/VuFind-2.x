<?
    // Set default value if necessary:
    if (!isset($this->searchClassId)) {
        $this->searchClassId = 'Solr';
    }

    // Load search actions and settings (if any):
    $options = $this->searchOptions($this->searchClassId);
    $handlers = $this->searchbox()->getHandlers(
        $this->searchClassId,
        isset($this->searchIndex) ? $this->searchIndex : null
    );
    $handlerCount = count($handlers);// @FIXME potrebujeme to?
    $basicSearch = $this->searchbox()->combinedHandlersActive() ? 'combined-searchbox' : $options->getSearchAction();
    $searchHome = $options->getSearchHomeAction(); // @FIXME potrebujeme to?
    $advSearch = $options->getAdvancedSearchAction(); // @FIXME potrebujeme to?
    $lastSort = $options->getLastSort();
    $lastLimit = $options->getLastLimit();
    if(!(isset($filterList) && (is_object($filterList) || is_array($filterList)))) {
        $filterList = [];
    }

    $shards = $options->getShards();

    $filterDetails = $this->searchbox()->getFilterDetails(
        isset($this->filterList) && is_array($this->filterList) ? $this->filterList : array(),
        isset($this->checkboxFilters) && is_array($this->checkboxFilters) ? $this->checkboxFilters : array()
     );

    ?>

<div class='search-panel <?=($this->searchResults) ? 'scrollable-search-panel' : ''?>'>

    <?

    /*
     * Render both searchTypeTemplates (basic, advanced) for future switching
     * when on results page.
     * This solutions prevent switching to re-download the same data from Solr.
     * Otherweise render empty autocomplete
     */

    if ($this->searchResults) {
        /* Render advanced search. Decide whether hidden or not. */
        $arrayOfVariablesForAdvancedSearch = [
            'this' => $this,
            'lastSort' => $lastSort,
            'lastLimit' => $lastLimit,
            'filterList' => $filterList,
            'options' => $options,
            'params' => $this->params,
        ];

        if ($this->searchTypeTemplate != 'advanced') {
            $arrayOfVariablesForAdvancedSearch['hiddenAdvancedSearch'] = true;
        }

        echo $this->context($this)->renderInContext(
            "search/ajax/advanced-search.phtml",
            $arrayOfVariablesForAdvancedSearch
        );
    }

    /* Render basic search. Decide whether hidden or not. */
    $arrayOfVariablesForBasicSearch = [
        'this' => $this,
        'options' => $options,
        'shards' => $shards,
        'basicSearch' => $basicSearch,
        'filterList' => $filterList,
        'handlers' => $handlers,
        'filterDetails' => $filterDetails,
    ];

    if ($this->searchTypeTemplate == 'advanced') {
        $arrayOfVariablesForBasicSearch['hiddenBasicSearch'] = true;
    }

    echo $this->context($this)->renderInContext(
        "search/ajax/autocomplete.phtml",
        $arrayOfVariablesForBasicSearch
    );

?>

</div>

<div class='hidden'>
  <input type="hidden" name="limit" value="<?= (! empty($_GET['limit']) ? $this->escapeHtmlAttr($_GET['limit']) : $lastLimit) ?>">
  <input type="hidden" name="sort" value="<?= (! empty($_GET['sort']) ? $this->escapeHtmlAttr($_GET['sort']) : $lastSort) ?>">
  <input type="hidden" name="page" value="<?= (! empty($_GET['page']) ? $this->escapeHtmlAttr($_GET['page']) : '1') ?>">
  <!-- Set next lines just for first initial search made by PHP from lookfor. In next searches, JS will take care to put here first value from lookfor0[][0] -->
  <input type="hidden" name="last_searched_lookfor0" value="<?= (isset($_GET['lookfor']) ? $this->escapeHtmlAttr($_GET['lookfor']) : '') ?>">
  <input type="hidden" name="last_searched_type0" value="<?= (! empty($_GET['type']) ? $this->escapeHtmlAttr($_GET['type']) : 'AllFields') ?>">
  <input type='hidden' name='keepFacetsEnabled' value='0'>
  <input type="hidden" name="searchTypeTemplate" value="<?= (! empty($_GET['searchTypeTemplate']) ? $this->escapeHtmlAttr($_GET['searchTypeTemplate']) : '') ?>">
</div>

<!-- Facets -->
<div class='hidden' id='hiddenFacetFilters'>
<? foreach ($filterList as $field => $data): ?>
  <? foreach ($data as $value): ?>
    <input type='hidden' class='hidden-filter' name='filter[]' value='<?=$this->escapeHtmlAttr($field)?>:"<?=$this->escapeHtmlAttr($value)?>"'>
  <? endforeach; ?>
<? endforeach; ?>
</div>
<!-- End of facets -->
